name: Test website

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Jekyll site for testing

    steps:
    - uses: actions/checkout@v2

    - name: Build the site in the Jekyll/builder container
      run: |
        docker run \
        -v ${{ github.workspace }}:/srv/jekyll -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
        jekyll/builder:latest /bin/bash -c "chmod -R 777 /srv/jekyll && jekyll build --future"
        
    - name: List result of Jekyll build
      run: ls _site/ -l

    - name: Publish built site
      uses: actions/upload-artifact@v2
      with:
        name: Built site ${{ github.run_number }}
        path: ./_site
        if-no-files-found: error

  validate:

    runs-on: ubuntu-latest
    name: Validate HTML
    needs: [build]

    steps:
    - name: Fetch built site
      uses: actions/download-artifact@v2
      with:
        name: Built site ${{ github.run_number }}
        path: ./_site

    # just to satisfy the `Cyb3r-Jak3/html5validator-action` action
    - name: Create dummy git repository
      run: git init

    - name: HTML5 Validator
      uses: Cyb3r-Jak3/html5validator-action@v7.0.0
      with:
        root: _site/

  check-links:

    runs-on: ubuntu-latest
    name: Check links
    needs: [build]

    steps:
    - name: Fetch built site
      uses: actions/download-artifact@v2
      with:
        name: Built site ${{ github.run_number }}
        path: ./_site

    - name: Copy assets
      run: cp -r assets _site/assets

    # TODO: we are not checking absolute links as pytest plugins does not support them
    - name: Check links
      run: |
        pip install pytest-check-links
        pytest _site/ --check-links --check-links-ignore "https://.*linkedin.com/.*" --check-links-ignore "/"

  lighthouse:

    runs-on: ubuntu-latest
    name: Check quality with Lighthouse
    needs: [build]

    steps:
      - name: Fetch repository
        uses: actions/checkout@v2
      - name: Fetch built site
        uses: actions/download-artifact@v2
        with:
          name: Built site ${{ github.run_number }}
          path: ./_site
      - name: Audit with Lighthouse
        uses: treosh/lighthouse-ci-action@v8
        with:
          configPath: ".github/workflows/lighthouserc.json"
          temporaryPublicStorage: true
          uploadArtifacts: true
